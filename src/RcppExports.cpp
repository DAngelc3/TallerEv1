// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cbind_rcpp
NumericMatrix cbind_rcpp(NumericMatrix matrix_1, NumericVector vector_1);
RcppExport SEXP _TallerEv1_cbind_rcpp(SEXP matrix_1SEXP, SEXP vector_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    rcpp_result_gen = Rcpp::wrap(cbind_rcpp(matrix_1, vector_1));
    return rcpp_result_gen;
END_RCPP
}
// maxmin_cpp
NumericMatrix maxmin_cpp(NumericMatrix matrix_1, NumericMatrix matrix_2);
RcppExport SEXP _TallerEv1_maxmin_cpp(SEXP matrix_1SEXP, SEXP matrix_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_2(matrix_2SEXP);
    rcpp_result_gen = Rcpp::wrap(maxmin_cpp(matrix_1, matrix_2));
    return rcpp_result_gen;
END_RCPP
}
// mult_matrix_rcpp
NumericMatrix mult_matrix_rcpp(NumericMatrix matrix_1, NumericMatrix matrix_2);
RcppExport SEXP _TallerEv1_mult_matrix_rcpp(SEXP matrix_1SEXP, SEXP matrix_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_2(matrix_2SEXP);
    rcpp_result_gen = Rcpp::wrap(mult_matrix_rcpp(matrix_1, matrix_2));
    return rcpp_result_gen;
END_RCPP
}
// rbind_rcpp
NumericMatrix rbind_rcpp(NumericMatrix matrix_1, NumericVector vector_1);
RcppExport SEXP _TallerEv1_rbind_rcpp(SEXP matrix_1SEXP, SEXP vector_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    rcpp_result_gen = Rcpp::wrap(rbind_rcpp(matrix_1, vector_1));
    return rcpp_result_gen;
END_RCPP
}
// wich_max_rcpp
DataFrame wich_max_rcpp(NumericMatrix matrix_1);
RcppExport SEXP _TallerEv1_wich_max_rcpp(SEXP matrix_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    rcpp_result_gen = Rcpp::wrap(wich_max_rcpp(matrix_1));
    return rcpp_result_gen;
END_RCPP
}
// wich_min_rcpp
DataFrame wich_min_rcpp(NumericMatrix matrix_1);
RcppExport SEXP _TallerEv1_wich_min_rcpp(SEXP matrix_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    rcpp_result_gen = Rcpp::wrap(wich_min_rcpp(matrix_1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TallerEv1_cbind_rcpp", (DL_FUNC) &_TallerEv1_cbind_rcpp, 2},
    {"_TallerEv1_maxmin_cpp", (DL_FUNC) &_TallerEv1_maxmin_cpp, 2},
    {"_TallerEv1_mult_matrix_rcpp", (DL_FUNC) &_TallerEv1_mult_matrix_rcpp, 2},
    {"_TallerEv1_rbind_rcpp", (DL_FUNC) &_TallerEv1_rbind_rcpp, 2},
    {"_TallerEv1_wich_max_rcpp", (DL_FUNC) &_TallerEv1_wich_max_rcpp, 1},
    {"_TallerEv1_wich_min_rcpp", (DL_FUNC) &_TallerEv1_wich_min_rcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_TallerEv1(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
